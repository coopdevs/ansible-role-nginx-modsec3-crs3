---
# tasks file for jdauphant.nginx-modsec3-crs3

- name: Installing Pre-Reqs for Debian/Ubuntu
  apt:
    name: "{{ nginx_modsec3_crs3_debian_pre_reqs }}"
    state: present
  when: ansible_os_family == "Debian"

- name: Installing Pre-Reqs for RHEL/Centos
  yum:
    name: "{{ nginx_modsec3_crs3_redhat_pre_reqs }}"
    state: present
  when: ansible_os_family == "RedHat"

- name: Save the current list of packages for Debian/Ubuntu
  shell: dpkg-query -l > /tmp/before.txt
  when: ansible_os_family == "Debian" and ( nginx_modsec3_crs3_keep is undefined or not nginx_modsec3_crs3_keep )

- name: Save the current list of packages for RHEL/Centos
  shell: rpm -qa > /tmp/before.txt
  when: ansible_os_family == 'RedHat' and ( nginx_modsec3_crs3_keep is undefined or not nginx_modsec3_crs3_keep )

- name: Installing compiler dependencies for Debian/Ubuntu
  apt:
    name: "{{ nginx_modsec3_crs3_debian_compiler_reqs }}"
    state: present
  when: ansible_os_family == "Debian"

- name: Installing compiler dependencies for RHEL/Centos
  yum:
    name: "{{ nginx_modsec3_crs3_redhat_compiler_reqs }}"
    state: present
  when: ansible_os_family == "Redhat"

# - name: Run Nginx SElinux tasks
#   include_role:
#     name: nginxinc.nginx
#     tasks_from: selinux.yml
#     allow_duplicates: yes
#   when: ansible_selinux and ansible_selinux.status == "enabled"

- name: Run Nginx official repo tasks
  include_role:
    name: jdauphant.nginx
    tasks_from: nginx-official-repo.yml
    allow_duplicates: yes
  when: nginx_official_repo == True

# - name: Run Nginx install packages tasks
#   include_role:
#     name: jdauphant.nginx
#     tasks_from: installation.packages.yml
#     allow_duplicates: yes
#  when: nginx_installation_type == "packages"

- name: Get the rpm or apt package facts
  package_facts:
    manager: "auto"

- name: Record nginx version
  set_fact:
    nginx_modsec3_crs3_nginx_version: "{{ ansible_facts.packages.nginx[0].version.split('-')[0] }}"

- name: Get Nginx conf location
  shell: dirname $(nginx -V 2>&1 | grep "configure arguments:" | sed -e 's/.*--conf-path=\([^ ]*\).*/\1/')
  register: _nginx_conf_location
  changed_when: false
  when: nginx_conf_dir is not defined

- name: Set variable nginx_conf_dir
  set_fact:
    nginx_conf_dir: "{{ _nginx_conf_location.stdout }}"
  when: nginx_conf_dir is not defined

- name: Check if ModSecurity3 is present
  stat:
    path: /usr/local/modsecurity/lib/libmodsecurity.so
  register: modsec3_present
  when: not nginx_modsec3_crs3_force_compile

- name: Check if modsecurity-nginx is present
  stat:
    path: /usr/lib/nginx/modules/ngx_http_modsecurity_module.so
  register: modsec3_nginx_present
  when: not nginx_modsec3_crs3_force_compile
  
- name: Check if OWASP CRS3 is present
  stat:
    path: /etc/nginx/modsec/owasp-modsecurity-crs/crs-setup.conf
  register: crs3_present
  when: not nginx_modsec3_crs3_force_compile

- name: Compile ModSecurity3 and install OWAPS CRS3
  include: compile.yml
  when: nginx_modsec3_enabled

- name: Configure Nginx now that the Modsec module is built
  import_role:
    name: jdauphant.nginx

- name: Check which packages were installed for Debian/Ubuntu
  shell: dpkg-query -l > /tmp/after.txt
  when: ansible_os_family == "Debian" and ( nginx_modsec3_crs3_keep is undefined or not nginx_modsec3_crs3_keep )

- name: Check which packages were installed for RHEL/Centos
  shell: rpm -qa > /tmp/after.txt
  when: ansible_os_family == "RedHat" and ( nginx_modsec3_crs3_keep is undefined or not nginx_modsec3_crs3_keep )

- name: Create a list of installed packages
  shell: diff /tmp/before.txt /tmp/after.txt|awk '/>/{print $3}'
  register: installed
  when: nginx_modsec3_crs3_keep is undefined or not nginx_modsec3_crs3_keep

- name: Remove installed packages for compiling
  package:
    name: "{{ installed.stdout_lines }}"
    state: absent
  when: installed is defined and (nginx_modsec3_crs3_keep is undefined or not nginx_modsec3_crs3_keep)
